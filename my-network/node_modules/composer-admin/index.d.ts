export class AdminConnection {
  constructor(arg0?: any);
  connect(arg0?: any, arg1?: any, arg2?: any, arg3?: any): any;
  createProfile(arg0?: any, arg1?: any): any;
  deleteProfile(arg0?: any): any;
  getProfile(arg0?: any): any;
  getAllProfiles(): any;
  disconnect(): any;
  deploy(arg0?: any): any;
  undeploy(arg0?: any): any;
  update(arg0?: any): any;
  ping(): any;
  list(): any;
  importIdentity(arg0?: any, arg1?: any, arg2?: any, arg3?: any): any;
}
export class BusinessNetworkDefinition {
  static fromArchive(arg0?: any): any;
  static fromDirectory(arg0?: any, arg1?: any): any;
  static processDirectory(arg0?: any, arg1?: any): any;
  static processFile(arg0?: any, arg1?: any): any;
  static walkSync(arg0?: any, arg1?: any, arg2?: any): any;
  constructor(arg0?: any, arg1?: any, arg2?: any, arg3?: any);
  getIdentifier(): any;
  getMetadata(): any;
  getName(): any;
  getVersion(): any;
  getDescription(): any;
  toArchive(arg0?: any): any;
  accept(arg0?: any, arg1?: any): any;
  getIntrospector(): any;
  getFactory(): any;
  getSerializer(): any;
  getScriptManager(): any;
  getAclManager(): any;
  getModelManager(): any;
}
export class Logger {
  static setFunctionalLogger(arg0?: any): any;
  static getDebugEnv(): any;
  static getLoggerConfig(): any;
  static getLog(arg0?: any): any;
  static _setupLog(arg0?: any): any;
  static reset(): any;
  constructor(arg0?: any);
  intlog(arg0?: any, arg1?: any, arg2?: any): any;
  _intLogMain(arg0?: any, arg1?: any, arg2?: any): any;
  _intLogFirst(arg0?: any, arg1?: any, arg2?: any): any;
  debug(arg0?: any, arg1?: any, arg2?: any): any;
  warn(arg0?: any, arg1?: any, arg2?: any): any;
  info(arg0?: any, arg1?: any, arg2?: any): any;
  verbose(arg0?: any, arg1?: any, arg2?: any): any;
  error(arg0?: any, arg1?: any, arg2?: any): any;
  entry(arg0?: any, arg1?: any): any;
  exit(arg0?: any, arg1?: any): any;
}
